@using InvoiceApp.ViewModels.Components;
@using InvoiceApp.ViewModels.User
@using Microsoft.AspNetCore.Http.Extensions;

@model UserListViewModel;

@{
    ViewData["Title"] = "Users";
    var (Users, Parameters) = (Model.Users, Model.Parameters);
    var returnUrl = Context.Request.GetDisplayUrl();
    var deletionModalId = "deletion-modal";
}


<form
    asp-controller="User"
    asp-action="List"
    method="get"
    class="search-form container card py-2 px-3 d-grid gap-2"
>
    <div class="row p-0">
        <div class="col-md-2 col-12 p-0 ">
            <label class="form-label">Name:</label>
        </div>
        <div class="col-md-10 col-12 p-0">
            <input name="Name" value="@Parameters.Name" type="text" class="form-control" />
        </div>
    </div>

    <div class="row p-0">
        <div class="col-md-2 col-12 p-0">
            <label class="form-label">Surname:</label>
        </div>
        <div class="col-md-10 col-12 p-0">
            <input name="Surname" value="@Parameters.Surname" type="text" class="form-control" />
        </div>
    </div>

    <div class="row p-0">
        <div class="col-md-2 col-12 p-0">
            <label class="form-label">Email:</label>
        </div>
        <div class="col-md-10 col-12 p-0">
            <input name="Email" value="@Parameters.Email" type="email" class="form-control" />
        </div>
    </div>

    <div class="row p-0">
        <div class="col p-0 d-flex justify-content-end align-items-center gap-2">
			<a asp-controller="User" asp-action="List" class="btn btn-warning">Clear</a>
            <input value="Search" type="submit" class="btn btn-primary m-0" />
        </div>
    </div>
</form>

<div class="table-wrapper my-3">
    <table class="table fs-6">
        <thead>
            <tr>
                <th scope="col" style="width: 20%">Name</th>
                <th scope="col" style="width: 25%">Surname</th>
                <th scope="col" style="width: 20%">Email</th>
                <th scope="col" style="width: 10%">Date of birth</th>
                <th scope="col" style="width: 10%">Role</th>
                <th style="width: 15%"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in Users)
            {
                
                <tr>
                    <td>@user.Name</td>
                    <td>@user.Surname</td>
                    <td>@user.Email</td>
                    <td>@user.DateOfBirth.ToString("yyyy-MM-dd")</td>
                    <td>@user.RoleName</td>
                    <td>
                        <a asp-controller="User" asp-action="Details" asp-route-id="@user.Id" asp-route-returnUrl="@returnUrl" class="btn btn-sm btn-info">Details</a>
                        <a asp-controller="User" asp-action="Edit" asp-route-id="@user.Id" asp-route-returnUrl="@returnUrl" class="btn btn-sm btn-warning">Edit</a>
                        <button data-modal="@deletionModalId" data-id="@user.Id" 
                            data-ondelete="this.closest('tr').remove()" 
                            class="btn btn-sm btn-danger"
                        >
                            Delete
                        </button>
                       @* <a asp-controller="User" asp-action="Delete" asp-route-id="@user.Id" asp-route-returnUrl="@returnUrl" class="btn btn-danger">Delete</a>*@
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@await Component.InvokeAsync("Pagination", new PaginationViewModel()
{
    ControllerName = "User",
    ActionName = "List",
    Data = Model.Users,
    Parameters = Model.Parameters
})

<div class="container my-3 p-0">
	<a asp-controller="User" asp-action="Index">Back</a>
</div>

@await Component.InvokeAsync("DeletionModal", new DeletionModalViewModel()
{
    ModalId = deletionModalId,
    Message = "Are you sure?",
    ActionUrl = Url.Action("Delete", "User")
})
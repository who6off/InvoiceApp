@using InvoiceApp.Data.Models;
@using InvoiceApp.Helpers;
@using InvoiceApp.Services.Interfaces;
@using InvoiceApp.ViewModels.Components;
@using InvoiceApp.ViewModels.Invoice;
@using System.Globalization;

@inject ICompanyService _companyService;

@model ListViewModel

@{
    var (Invoices, Parameters) = (Model.Invoices, Model.Parameters);
    var companies = (await _companyService.GetAll())
        .Select(i => i.Name)
        .Prepend("");
    var companiesList = new SelectList(companies);
    var deletionModalId = "deletion-modal";
}

<form asp-controller="Invoice"
      asp-action="@Model.ActionName"
      method="get"
      class="search-form container card py-2 px-3 d-grid gap-2"
>
    <div class="row p-0">
        <div class="col-2 p-0 ">
            <label class="form-label">Company:</label>
        </div>
        <div class="col-10 p-0">
            <select asp-for="@Parameters.CompanyName" name="CompanyName" asp-items="@companiesList" class="form-control"></select>
        </div>
    </div>

    <div class="row p-0">
        <div class="col-2 p-0">
            <label class="form-label">Month:</label>
        </div>
        <div class="col-10 p-0">
            <input name="Month" value="@Parameters?.Month?.ToString("yyyy-MM")" type="month" class="form-control" />
        </div>
    </div>

    <div class="row p-0">
        <div class="col-2 p-0">
            <label class="form-label">Status:</label>
        </div>
        <div class="col-10 d-flex justify-content-start align-items-center gap-4 p-0">
            <div class=" d-flex justify-content-start align-items-center gap-1">
                <input type="checkbox" data-value="@InvoiceStatuses.Submitted" class="status-checkbox form-check-input" />
				<span>@InvoiceStatuses.Submitted</span>
            </div>
            <div class=" d-flex justify-content-start align-items-center gap-1">
                <input type="checkbox" data-value="@InvoiceStatuses.Approved" class="status-checkbox form-check-input" />
				<span>@InvoiceStatuses.Approved</span>
            </div>
            <div class=" d-flex justify-content-start align-items-center gap-1">
                <input type="checkbox" data-value="@InvoiceStatuses.Rejected" class="status-checkbox form-check-input" />
                <span>@InvoiceStatuses.Rejected</span>
            </div>
        </div>
    </div>

    <div class="row p-0">
        <div class="col p-0 d-flex justify-content-end align-items-center">
            <input value="Search" type="submit" class="btn btn-primary m-0" />
        </div>
    </div>
</form>



<div class="table-wrapper">
<table class="table fs-6">
    <thead>
        <tr>
            <th scope="col" style="width:10%">Id</th>
            <th scope="col" style="width:17%">Owner</th>
            <th scope="col" style="width:17%">Amount</th>
            <th scope="col" style="width:15%">Month</th>
            <th scope="col" style="width:10%">Status</th>
            <th scope="col" style="width:16%">Last Change</th>
            <th scope="col" style="width:15%"></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Invoices)
        {
            var statusClass = item.Status switch
            {
                    InvoiceStatuses.Rejected => "text-danger",
                    InvoiceStatuses.Approved => "text-success",
                    InvoiceStatuses.Submitted => "text-primary",
                    _ => ""
            };

            <tr>
                <td>@item.Id</td>
                <td>@item.Owner?.Name</td>
                <td>@item.Amount.ToSeparationString()</td>
                <td>@item.Month.ToMonthString()</td>
                <td class="@statusClass">@item.Status</td>
                <td>@item.LastUpdateDate.ToDateWithTimeString()</td>
                <td>
                        <a asp-controller="Invoice" asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-info">Detais</a>
                        <a asp-controller="Invoice" asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-warning">Edit</a>
                        <button data-modal="@deletionModalId" data-id="@item.Id"
                            data-ondelete="this.closest('tr').remove()"
                            class ="btn btn-sm btn-danger"
                        >
                            Delete
                        </button>
                </td>
            </tr>
        }
    </tbody>
</table>
</div>

@await Component.InvokeAsync("Pagination", new PaginationViewModel()
{
    ControllerName = "Invoice",
    ActionName = Model.ActionName,
    Data = Model.Invoices,
    Parameters = Model.Parameters
})

@await Component.InvokeAsync("DeletionModal", new DeletionModalViewModel()
{
    ModalId = deletionModalId,
    Message = "Are you sure?",
    ActionUrl = Url.Action("Delete", "Invoice")
})


@section Scripts{
	<script>
        const Statuses = @Json.Serialize(Parameters.Status);
    </script>
    <script src="~/js/Invoice/list.js"></script>
}